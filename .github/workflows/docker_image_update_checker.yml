%YAML 1.1
---
name: 'DockerImageUpdateChecker'
# Adapted from https://github.com/marketplace/actions/docker-image-update-checker#minimal

# TODO: check the relevant tags in rel-10_0, rel-10_1, rel-11_0 and trigger rebuilds in these commits
# TODO: saner setup which branch uses which base image

on:

  # The trigger on 'workflow_dispatch' allows manual start
  # on https://github.com/RotherOSS/otobo/actions/workflows/docker_image_update_checker.yml
  workflow_dispatch:

  # The trigger on 'schedule' allows to run daily. Time is in UTC declared in cron syntax.
  # The scheduled jobs run only on the default branch.
  schedule:
    - cron: '37 6 * * *'

jobs:
  CheckDockerImageUpdate:
    runs-on: 'ubuntu-latest'
    steps:

      - name: Setup for the branch rel-11_1
        run: |
         echo "otobo_branch=rel-11_1"                              >> $GITHUB_ENV
         echo "otobo_base_image=perl:5.40-bookworm"                >> $GITHUB_ENV
         echo "otobo_ref=${{ github.repository }}:devel-11_1_test" >> $GITHUB_ENV

      -
        # this step sets ${{ steps.check.outputs.needs-updating }}
        name: Check whether base image was updated
        id: check
        uses: lucacome/docker-image-update-checker@v1
        with:
          base-image: ${{ env.otobo_base_image }}
          image: ${{ env.otobo_ref }}

      -
        # print the result in any case
        name: Report the check result
        run: |
          echo "The OTOBO web image needs updating: ${{ steps.check.outputs.needs-updating }}"

      -
        # needed for the build arg BUILD_DATE
        name: Get the current date and time
        if: steps.check.outputs.needs-updating == 'true'
        id: get_build_date
        run: echo "otobo_build_date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV

      -
        name: Set up Docker Buildx
        if: steps.check.outputs.needs-updating == 'true'
        uses: docker/setup-buildx-action@v3

      - name: 'check out the relevant OTOBO branch'
        if: steps.check.outputs.needs-updating == 'true'
        uses: actions/checkout@v4
        with:
          ref: ${{ env.otobo_branch }}

      -
        # needed for build arg GIT_COMMIT
        name: 'get the commit SHA of the current checkout'
        if: steps.check.outputs.needs-updating == 'true'
        run: echo "otobo_commit=$(git log -1 '--format=format:%H')" >> $GITHUB_ENV

      -
        # build the image, not pushing yet, no pushing as DockerHub access is not set up yet
        # Caching with Github Actions Cache, limited to 10 GB
        # context: .  indicates that the current checkout is used
        name: Build
        if: steps.check.outputs.needs-updating == 'true'
        uses: docker/build-push-action@v6
        with:
          load: true
          context: .
          file: otobo.web.dockerfile
          pull: true
          build-args: |
            BUILD_DATE=${{ env.otobo_build_date }}
            DOCKER_TAG=${{ env.otobo_ref }}
            GIT_REPO=${{ github.repository }}
            GIT_BRANCH=${{ env.otobo_branch }}
            GIT_COMMIT=${{ env.otobo_commit }}
          target: otobo-web
          tags: ${{ env.otobo_ref }}
          cache-from: type=gha
          cache-to: type=gha,mode=max`

      -
        # otobo_first_time hasn't run yet, so /opt/otobo is still empty
        name: Info
        if: steps.check.outputs.needs-updating == 'true'
        run: |
          docker run --rm -w /opt/otobo_install/otobo_next --entrypoint /bin/bash $otobo_ref -c "more git-repo.txt git-branch.txt git-commit.txt RELEASE | cat"

      -
        # login to Docker Hub only after the build
        name: Login to Docker Hub
        if: steps.check.outputs.needs-updating == 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      -
        # finally upload to DockerHub
        # the built image is already available in the job
        name: Push to DockerHub
        if: steps.check.outputs.needs-updating == 'true'
        uses: docker/build-push-action@v6
        with:
          push: true
          context: .
          file: otobo.web.dockerfile
          pull: true
          build-args: |
            BUILD_DATE=${{ env.otobo_build_date }}
            DOCKER_TAG=${{ env.otobo_ref }}
            GIT_REPO=${{ github.repository }}
            GIT_BRANCH=${{ env.otobo_branch }}
            GIT_COMMIT=${{ env.otobo_commit }}
          target: otobo-web
          tags: ${{ env.otobo_ref }}
          cache-from: type=gha
          cache-to: type=gha,mode=max`
      -
        # indicate an error when the base image has changed
        name: Exit with an error
        if: steps.check.outputs.needs-updating == 'true'
        run: |
          echo "::error:: Please check automatic update for ${{ env.otobo_branch }}"
          exit 1;
