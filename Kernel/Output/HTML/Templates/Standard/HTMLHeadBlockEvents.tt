# --
# OTOBO is a web-based ticketing system for service organisations.
# --
# Copyright (C) 2001-2020 OTRS AG, https://otrs.com/
# Copyright (C) 2019-2023 Rother OSS GmbH, https://otobo.de/
# --
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later version.
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.
# --
## nofilter(TidyAll::Plugin::OTOBO::TT::ScriptUsage)

<script type="text/javascript">//<![CDATA[
"use strict";

var Core = Core || {};
Core.App = Core.App || {};

/**
 * @function
 *      Ignores an event. Implemented without jQuery because no external JavaScript is available yet.
 * @return nothing
 */
function IgnoreEvent (Event) {
    if (Event.preventDefault) {
        Event.preventDefault();
    }
    Event.returnValue = false;
    return false;
}

/**
 * @function
 *      This function blocks all click events on the page until it is
 *      unblocked after all JavaScript was loaded. Implemented without
 *      jQuery because no external JavaScript is available yet.
 * @return nothing
 */
Core.App.BlockEvents = function() {
    if (document.addEventListener) {
        document.addEventListener('click', IgnoreEvent, false);
    }
    else {
        document.attachEvent('onclick', IgnoreEvent);
    }
};

/**
 * @function
 *      This function unblocks all click events on the page
 *      after all JavaScript was loaded. Implemented without
 *      jQuery because no external JavaScript is available yet.
 * @return nothing
 */
Core.App.UnblockEvents = function() {
    if (document.removeEventListener) {
        document.removeEventListener('click', IgnoreEvent, false);
    }
    else {
        document.detachEvent('onclick', IgnoreEvent);
    }
    // allow tests to wait for complete page load
    Core.App.PageLoadComplete = true;
};

// Now block all click events on the page to make sure that
// an agent does not click before all JavaScript was loaded,
// as event listeners are not yet available, for example.
Core.App.BlockEvents();
//]]></script>
